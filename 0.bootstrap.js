(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/wasm_game_of_life.js":
/*!***********************************!*\
  !*** ../pkg/wasm_game_of_life.js ***!
  \***********************************/
/*! exports provided: __wbg_set_wasm, greet, Cell, Universe, __wbg_alert_d3b6e8db27c82dfa, __wbg_random_26e2d782b541ca6b, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasm_game_of_life_bg.wasm */ \"../pkg/wasm_game_of_life_bg.wasm\");\n/* harmony import */ var _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wasm_game_of_life_bg.js */ \"../pkg/wasm_game_of_life_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_wasm\", function() { return _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_wasm\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"greet\", function() { return _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"greet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cell\", function() { return _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Cell\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Universe\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_alert_d3b6e8db27c82dfa\", function() { return _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_alert_d3b6e8db27c82dfa\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_random_26e2d782b541ca6b\", function() { return _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_random_26e2d782b541ca6b\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n\n\nObject(_wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_wasm\"])(_wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n//# sourceURL=webpack:///../pkg/wasm_game_of_life.js?");

/***/ }),

/***/ "../pkg/wasm_game_of_life_bg.js":
/*!**************************************!*\
  !*** ../pkg/wasm_game_of_life_bg.js ***!
  \**************************************/
/*! exports provided: __wbg_set_wasm, greet, Cell, Universe, __wbg_alert_d3b6e8db27c82dfa, __wbg_random_26e2d782b541ca6b, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_wasm\", function() { return __wbg_set_wasm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"greet\", function() { return greet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cell\", function() { return Cell; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return Universe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_alert_d3b6e8db27c82dfa\", function() { return __wbg_alert_d3b6e8db27c82dfa; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_random_26e2d782b541ca6b\", function() { return __wbg_random_26e2d782b541ca6b; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\nlet wasm;\nfunction __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} name\n*/\nfunction greet(name) {\n    const ptr0 = passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.greet(ptr0, len0);\n}\n\nfunction notDefined(what) { return () => { throw new Error(`${what} is not defined`); }; }\n/**\n*/\nconst Cell = Object.freeze({ Dead:0,\"0\":\"Dead\",Alive:1,\"1\":\"Alive\", });\n\nconst UniverseFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_universe_free(ptr >>> 0));\n/**\n*/\nclass Universe {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Universe.prototype);\n        obj.__wbg_ptr = ptr;\n        UniverseFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        UniverseFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_universe_free(ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Universe}\n    */\n    static new(width, height) {\n        const ret = wasm.universe_new(width, height);\n        return Universe.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        const ret = wasm.universe_width(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        const ret = wasm.universe_height(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} width\n    */\n    set_width(width) {\n        wasm.universe_set_width(this.__wbg_ptr, width);\n    }\n    /**\n    * @param {number} height\n    */\n    set_height(height) {\n        wasm.universe_set_height(this.__wbg_ptr, height);\n    }\n    /**\n    */\n    clean_grid() {\n        wasm.universe_clean_grid(this.__wbg_ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    cells() {\n        const ret = wasm.universe_cells(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    tick() {\n        wasm.universe_tick(this.__wbg_ptr);\n    }\n    /**\n    * @param {number} row\n    * @param {number} column\n    */\n    toggle_cell(row, column) {\n        wasm.universe_toggle_cell(this.__wbg_ptr, row, column);\n    }\n}\n\nfunction __wbg_alert_d3b6e8db27c82dfa(arg0, arg1) {\n    alert(getStringFromWasm0(arg0, arg1));\n};\n\nconst __wbg_random_26e2d782b541ca6b = typeof Math.random == 'function' ? Math.random : notDefined('Math.random');\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../www/node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../pkg/wasm_game_of_life_bg.js?");

/***/ }),

/***/ "../pkg/wasm_game_of_life_bg.wasm":
/*!****************************************!*\
  !*** ../pkg/wasm_game_of_life_bg.wasm ***!
  \****************************************/
/*! exports provided: memory, greet, __wbg_universe_free, universe_new, universe_width, universe_height, universe_set_width, universe_set_height, universe_clean_grid, universe_cells, universe_tick, universe_toggle_cell, __wbindgen_malloc, __wbindgen_realloc */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./wasm_game_of_life_bg.js */ \"../pkg/wasm_game_of_life_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/wasm_game_of_life_bg.wasm?");

/***/ }),

/***/ "./canvas.js":
/*!*******************!*\
  !*** ./canvas.js ***!
  \*******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CustomCanvas; });\n/* harmony import */ var wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wasm-game-of-life */ \"../pkg/wasm_game_of_life.js\");\n/* harmony import */ var wasm_game_of_life_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wasm-game-of-life/wasm_game_of_life_bg */ \"../pkg/wasm_game_of_life_bg.wasm\");\n\n\n\nconst BACKGROUND_GRID = \"#FFFFFF\";\nconst GRID_COLOR = \"#CCCCCC\";\nconst DEAD_COLOR = \"#FFFFFF\";\nconst ALIVE_COLOR = \"#22222\";\n\nconst COLORS = [ALIVE_COLOR, \"#2094f3\", \"#009485\", \"#ff9900\", \"#ff5724\", \"#4506cb\" ]\n\nlet universeInstance = wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].new(64,64);\n\nclass CustomCanvas {\n  constructor(canvasDomId) {\n    this.cellSize = 5;\n    this.canvas = document.getElementById(canvasDomId);\n    this.ctx = this.canvas.getContext('2d');\n\n    this.width = 64;\n    this.height = 64;\n    this.universe = wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].new(this.width, this.height);\n\n    this.darkBackground = false;\n    this.deadColor = DEAD_COLOR;\n    this.gridColor = GRID_COLOR;\n\n    this.resizeCanvas();\n  }\n\n  isDarkBackground() {\n    return this.darkBackground;\n  }\n\n  setDarkBackground(value) {\n    this.darkBackground = value;\n\n    if(value === true) {\n      this.deadColor = \"#2a2e37\";\n      this.gridColor =  \"#000000\"\n    } else {\n      this.deadColor = \"#FFFFFF\";\n      this.gridColor = GRID_COLOR;\n    }\n  }\n\n  getUniverse() {\n    return this.universe;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getCellSize() {\n    return this.cellSize;\n  }\n\n  setCellSize(cellSize) {\n    this.cellSize = cellSize;\n  }\n\n  getIndex(row, column) {\n    return row * this.width + column;\n  }\n\n  getCanvas() {\n    return this.canvas;\n  }\n\n  randomColor() {\n    const value = Math.random() * COLORS.length;\n    return COLORS[Math.round(value)];\n  }\n\n  drawGrid() {\n    this.ctx.beginPath();\n    this.ctx.strokeStyle = this.gridColor;\n\n    const width = this.width;\n    const height = this.height;\n    // Vertical lines.\n    for (let i = 0; i <= this.width; i++) {\n      this.ctx.moveTo(i * (this.cellSize + 1) + 1, 0);\n      this.ctx.lineTo(i * (this.cellSize + 1) + 1, (this.cellSize + 1) * this.height + 1);\n    }\n\n    // Horizontal lines.\n    for (let j = 0; j <= this.height; j++) {\n      this.ctx.moveTo(0,                           j * (this.cellSize + 1) + 1);\n      this.ctx.lineTo((this.cellSize + 1) * this.width + 1, j * (this.cellSize + 1) + 1);\n    }\n\n    this.ctx.stroke();\n  }\n\n  drawCells() { \n    const cellsPtr = this.universe.cells();\n    const cells = new Uint8Array(wasm_game_of_life_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, cellsPtr, this.width * this.height);\n\n    this.ctx.beginPath();\n    for (let row = 0; row < this.height; row++) {\n      for (let col = 0; col < this.width; col++) {\n        const idx = this.getIndex(row, col);\n        if (cells[idx] !== wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].Alive) {\n          continue;\n        }\n\n        this.ctx.fillStyle = this.randomColor();\n        this.ctx.fillRect(\n          col * (this.cellSize + 1) + 1,\n          row * (this.cellSize + 1) + 1,\n          this.cellSize,\n          this.cellSize\n        );\n      }\n    }\n\n    // Dead cells.\n    this.ctx.fillStyle = this.deadColor;\n    for (let row = 0; row < this.height; row++) {\n      for (let col = 0; col < this.width; col++) {\n        const idx = this.getIndex(row, col);\n        if (cells[idx] !== wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].Dead) {\n          continue;\n        }\n\n        this.ctx.fillRect(\n          col * (this.cellSize + 1) + 1,\n          row * (this.cellSize + 1) + 1,\n          this.cellSize,\n          this.cellSize\n        );\n      }\n    }\n    this.ctx.stroke();\n  }\n\n  toggleCell(row, col) {\n    this.universe.toggle_cell(row, col);\n  }\n\n  resizeCanvas() {\n    this.canvas.height = (this.cellSize + 1) * this.height + 1;\n    this.canvas.width = (this.cellSize + 1) * this.width + 1;\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  reset () {\n    this.universe.clean_grid();\n  }\n\n  resetUniverse(width, height) {\n    this.width = width;\n    this.height = height;\n    this.universe = wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].new(this.width, this.height);\n    this.resizeCanvas();\n  }\n}\n\n\n//# sourceURL=webpack:///./canvas.js?");

/***/ }),

/***/ "./fps.js":
/*!****************!*\
  !*** ./fps.js ***!
  \****************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class {\n  constructor() {\n    this.fps = document.getElementById(\"fps\");\n    this.frames = [];\n    this.lastFrameTimeStamp = performance.now();\n  }\n\n  render() {\n    // Convert the delta time since the last frame render into a measure\n    // of frames per second.\n    const now = performance.now();\n    const delta = now - this.lastFrameTimeStamp;\n    this.lastFrameTimeStamp = now;\n    const fps = 1 / delta * 1000;\n\n    // Save only the latest 100 timings.\n    this.frames.push(fps);\n    if (this.frames.length > 100) {\n      this.frames.shift();\n    }\n\n    // Find the max, min, and mean of our 100 latest timings.\n    let min = Infinity;\n    let max = -Infinity;\n    let sum = 0;\n    for (let i = 0; i < this.frames.length; i++) {\n      sum += this.frames[i];\n      min = Math.min(this.frames[i], min);\n      max = Math.max(this.frames[i], max);\n    }\n    let mean = sum / this.frames.length;\n\n    // Render the statistics.\n    this.fps.textContent = `\n        Frames per Second:\n          latest = ${Math.round(fps)}\n          avg of last 100 = ${Math.round(mean)}\n          min of last 100 = ${Math.round(min)}\n          max of last 100 = ${Math.round(max)}\n    `.trim();\n  }\n});\n\n//# sourceURL=webpack:///./fps.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas */ \"./canvas.js\");\n/* harmony import */ var _fps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fps */ \"./fps.js\");\n/* harmony import */ var wasm_game_of_life_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wasm-game-of-life/wasm_game_of_life_bg */ \"../pkg/wasm_game_of_life_bg.wasm\");\n\n\n\n\n\nlet animationId = null;\nlet fpsChosen = 60;\nlet fpsInterval, now, then, elapsed, startTime;\n\nlet customCanvas = new _canvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"game-of-life-canvas\");\nconst playPauseButton = document.getElementById(\"play-pause\");\nconst play = () => {\n  playPauseButton.textContent = \"⏸\";\n\n  fpsInterval = 1000 / fpsChosen;\n  then = Date.now();\n  startTime = then;\n\n  renderLoop();\n};\n\nconst pause = () => {\n  playPauseButton.textContent = \"▶\";\n  cancelAnimationFrame(animationId);\n  animationId = null;\n};\n\nconst isPaused = () => {\n  return animationId === null;\n};\n\nplayPauseButton.addEventListener(\"click\", event => {\n  if (isPaused()) {\n    play();\n  } else {\n    pause();\n  }\n});\n\nconst resetButton = document.getElementById(\"reset-null\");\nresetButton.addEventListener(\"click\", event => {\n  pause();\n  customCanvas.reset();\n  customCanvas.drawCells();\n});\n\nconst toggleBackgroundMode = document.getElementById('background-mode');\ntoggleBackgroundMode.addEventListener(\"click\", event => {\n  customCanvas.setDarkBackground(event.target.checked);\n  customCanvas.drawCells();\n});\n\nconst widthRange = document.getElementById(\"width-range\");\nwidthRange.addEventListener(\"change\", event => {\n  const span = document.getElementById(\"width-value\");\n  span.innerText = event.target.value;\n\n  pause();\n  customCanvas.resetUniverse(event.target.value, customCanvas.getHeight());\n  customCanvas.drawCells();\n});\n\nconst heightRange = document.getElementById(\"height-range\");\nheightRange.addEventListener(\"change\", event => {\n  const span = document.getElementById(\"height-value\");\n  span.innerText = event.target.value;\n  \n  pause();\n  customCanvas.resetUniverse(customCanvas.getWidth(), event.target.value);\n  customCanvas.drawCells();\n});\n\nconst cellSizeRange = document.getElementById(\"cell-size-range\");\ncellSizeRange.addEventListener(\"change\", event => {\n  const span = document.getElementById(\"cell-size-value\");\n  span.innerText = event.target.value;\n\n  pause();\n  customCanvas.setCellSize(parseInt(event.target.value));\n  customCanvas.resizeCanvas();\n  customCanvas.drawCells();\n});\n\nconst resetRandomButton = document.getElementById(\"reset-random\");\nresetRandomButton.addEventListener(\"click\", event => {\n  pause();\n  const width = customCanvas.getWidth();\n  const height = customCanvas.getHeight();\n  customCanvas.resetUniverse(width, height);\n  customCanvas.drawCells();\n});\n\nconst fullscreenButton = document.getElementById(\"fullscreen\");\nfullscreenButton.addEventListener(\"click\", event => {\n  fullscreen();\n});\n\nconst fpsRange = document.getElementById(\"fps-range\");\nfpsRange.addEventListener(\"change\", event => {\n  const span = document.getElementById(\"fps-range-value\");\n  span.innerText = event.target.value;\n\n  fpsChosen = parseInt(event.target.value, 10);\n\n  pause();\n  play();\n});\n\n\nconst renderLoop = () => {\n  //fps.render();\n  customCanvas.getUniverse().tick();\n  render();\n};\n\nconst render = () => {\n\n  animationId = requestAnimationFrame(renderLoop);\n\n  // calc elapsed time since last loop\n  now = Date.now();\n  elapsed = now - then;\n\n  // if enough time has elapsed, draw the next frame\n\n  if (elapsed > fpsInterval) {\n    // Get ready for next frame by setting then=now, but also adjust for your\n    // specified fpsInterval not being a multiple of RAF's interval (16.7ms)\n    then = now - (elapsed % fpsInterval);\n    // Put your drawing code here\n    customCanvas.drawGrid();\n    customCanvas.drawCells();\n  }\n}\n\nlet canvas = customCanvas.getCanvas();\nlet isDrawing = false;\n\ncanvas.addEventListener(\"mouseup\" , _event => {\n  isDrawing = false;\n});\n\ncanvas.addEventListener(\"mousedown\", _event => {\n  isDrawing = true;\n})\n\n\nfunction onDraw(event) {\n  const boundingRect = canvas.getBoundingClientRect();\n\n  const scaleX = canvas.width / boundingRect.width;\n  const scaleY = canvas.height / boundingRect.height;\n\n  const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\n  const canvasTop = (event.clientY - boundingRect.top) * scaleY;\n\n  const row = Math.min(Math.floor(canvasTop / (customCanvas.getCellSize() + 1)), customCanvas.getHeight() - 1);\n  const col = Math.min(Math.floor(canvasLeft / (customCanvas.getCellSize() + 1)), customCanvas.getWidth() - 1);\n\n  customCanvas.toggleCell(row, col);\n\n  customCanvas.drawGrid();\n  customCanvas.drawCells();\n}\n\nfunction fullscreen() {\n  const fullscreenElement = document.fullscreenElement;\n  if(!canvas) {\n      return;\n  }\n\n  if(!fullscreenElement)\n  {\n      if(canvas.requestFullscreen)\n      {\n        canvas.requestFullscreen()\n      }\n  }\n  else\n  {\n      if(document.exitFullscreen)\n      {\n        document.exitFullscreen()\n      }\n  }\n}\n\ncanvas.addEventListener(\"mousemove\", event => {\n  if(!isDrawing) {\n    return;\n  }\n  onDraw(event);\n});\n\ncanvas.addEventListener(\"click\", event => {\n  onDraw(event);\n})\n\ncanvas.addEventListener(\"dblclick\", event => {\n  fullscreen();\n});\nrender();\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/harmony-module.js?");

/***/ })

}]);